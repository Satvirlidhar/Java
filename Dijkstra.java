public class Dijkstra {

	public static void main(String[] args) {
		int i ,vnear=0;
		edge e;
		int n = 20;
		edge F[] = new edge[n];
		int touch[] = new int [n];
		int length[] = new  int [n];
		int O =999;
		int W[][]={
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,47},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,48},
				{1,0,3,4,5,6,7,8,9,10,1,0,3,4,5,6,5,1,2,3},
				{1,2,0,4,5,6,7,8,9,10,1,0,3,4,5,6,5,1,2,3},
				{1,2,3,0,5,6,7,8,9,10,1,0,3,4,5,6,5,1,2,3},
				{1,2,3,4,0,6,7,8,9,10,1,0,3,4,5,6,5,1,2,3},
				{1,2,3,4,5,0,7,8,9,10,1,0,3,4,5,6,5,1,2,3},
				{1,2,3,4,5,6,0,8,9,10,1,0,3,4,5,6,5,1,2,3},
				{1,2,3,4,5,6,7,0,9,10,1,0,3,4,5,6,5,1,2,3},
				{1,2,3,4,5,6,7,8,0,10,1,0,3,4,5,6,5,1,2,3},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{0,2,3,4,5,6,7,8,9,10, 0,2,3,4,5,8,7,6,5,4},
				{1,2,3,4,5,6,7,8,9,0,1,0,3,4,5,6,5,1,2,3}};
	
		
		
		for(i=0; i<n;i++){
			touch[i]=2;
			length[i]=W[2][i];
		}
		for (int t = 0;t<n;t++){
			int min = 999;
			for(int j = 0;j<n;j++){
				if(0<=length[j]&&length[j]<min){
					min = length[j];
					vnear = j;
				}
				e = new edge();
				
				e.last = vnear;
		
				e.weight = min;
				F[t]=e;
			
			}
			for(int k=0;k<n;k++){
				if(length[vnear]+W[vnear][k]<length[k]){
					length[k]=length[vnear]+W[vnear][k];
					touch[k] = vnear;

				}
				
			}
			length[vnear]=-1;
		}
		for( i =0;i<n;i++){
			System.out.println("the weight is "+F[i].weight+", the destination is "+(F[i].last+1));
		}
	}
}	

